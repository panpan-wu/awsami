# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"
{% for item in telegraf_global_tags|default([]) %}
  {{ item.tag_name }} = "{{ item.tag_value }}"
{% endfor %}


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "60s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "10s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "30s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "30s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Log at debug level.
  debug = false
  ## Log only error level messages.
  quiet = true

  ## Log file name, the empty string means to log to stderr.
  # logfile = ""
  logfile = "/var/log/telegraf/telegraf.log"

  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.  Logs are rotated only when
  ## written to, if there is no log activity rotation may be delayed.
  # logfile_rotation_interval = "0d"

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"
  logfile_rotation_max_size = "10MB"

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  logfile_rotation_max_archives = 5

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

{% for item in telegraf_outputs|default([]) %}
[[outputs.{{ item.type }}]]
{% for items in item.config %}
  {{ items }}
{% endfor %}
{% endfor %}

{% if telegraf_outputs|default([])|length == 0 %}
# No outputs configured, added a file plugin so telegraf doesn't stop working.
[[outputs.file]]
  files = ["/var/log/telegraf/metrics.log"]
  rotation_interval = "24h"
  rotation_max_size = "10MB"
  rotation_max_archives = 3
  data_format = "influx"
{% endif %}

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

{% for item in telegraf_inputs_default|default([]) %}
[[inputs.{{ item.type }}]]
{% for items in item.config %}
  {{ items }}
{% endfor %}
{% endfor %}

{% for item in telegraf_inputs_extra|default([]) %}
[[inputs.{{ item.type }}]]
{% for items in item.config %}
  {{ items }}
{% endfor %}
{% endfor %}

{% if telegraf_inputs_default|default([])|length == 0 and telegraf_inputs_extra|default([])|length == 0 %}
# No inputs configured, added a mem plugin so telegraf doesn't stop working.
[[inputs.mem]]
  fieldpass = ["used_percent", "total"]
{% endif %}
